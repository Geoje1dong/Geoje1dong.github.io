{"ast":null,"code":"import clamp from 'lodash-es/clamp';\nimport { setStyle } from '../../utils/set-style';\nvar GLOW_MAX_OPACITY = 0.75;\nvar GLOW_MAX_OFFSET = 0.25;\n\nvar Glow =\n/** @class */\nfunction () {\n  function Glow(_scrollbar) {\n    this._scrollbar = _scrollbar;\n    this._canvas = document.createElement('canvas');\n    this._ctx = this._canvas.getContext('2d');\n    setStyle(this._canvas, {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      display: 'none'\n    });\n  }\n\n  Glow.prototype.mount = function () {\n    this._scrollbar.containerEl.appendChild(this._canvas);\n  };\n\n  Glow.prototype.unmount = function () {\n    if (this._canvas.parentNode) {\n      this._canvas.parentNode.removeChild(this._canvas);\n    }\n  };\n\n  Glow.prototype.adjust = function () {\n    var size = this._scrollbar.size;\n    var DPR = window.devicePixelRatio || 1;\n    var nextWidth = size.container.width * DPR;\n    var nextHeight = size.container.height * DPR;\n\n    if (nextWidth === this._canvas.width && nextHeight === this._canvas.height) {\n      return;\n    }\n\n    this._canvas.width = nextWidth;\n    this._canvas.height = nextHeight;\n\n    this._ctx.scale(DPR, DPR);\n  };\n\n  Glow.prototype.recordTouch = function (event) {\n    var touch = event.touches[event.touches.length - 1];\n    this._touchX = touch.clientX;\n    this._touchY = touch.clientY;\n  };\n\n  Glow.prototype.render = function (_a, color) {\n    var _b = _a.x,\n        x = _b === void 0 ? 0 : _b,\n        _c = _a.y,\n        y = _c === void 0 ? 0 : _c;\n\n    if (!x && !y) {\n      setStyle(this._canvas, {\n        display: 'none'\n      });\n      return;\n    }\n\n    setStyle(this._canvas, {\n      display: 'block'\n    });\n    var size = this._scrollbar.size;\n\n    this._ctx.clearRect(0, 0, size.container.width, size.container.height);\n\n    this._ctx.fillStyle = color;\n\n    this._renderX(x);\n\n    this._renderY(y);\n  };\n\n  Glow.prototype._getMaxOverscroll = function () {\n    var options = this._scrollbar.options.plugins.overscroll;\n    return options && options.maxOverscroll ? options.maxOverscroll : 150;\n  };\n\n  Glow.prototype._renderX = function (strength) {\n    var size = this._scrollbar.size;\n\n    var maxOverscroll = this._getMaxOverscroll();\n\n    var _a = size.container,\n        width = _a.width,\n        height = _a.height;\n    var ctx = this._ctx;\n    ctx.save();\n\n    if (strength > 0) {\n      // glow on right side\n      // horizontally flip\n      ctx.transform(-1, 0, 0, 1, width, 0);\n    }\n\n    var opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n    var startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width; // controll point\n\n    var x = Math.abs(strength);\n    var y = this._touchY || height / 2;\n    ctx.globalAlpha = opacity;\n    ctx.beginPath();\n    ctx.moveTo(0, -startOffset);\n    ctx.quadraticCurveTo(x, y, 0, height + startOffset);\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  };\n\n  Glow.prototype._renderY = function (strength) {\n    var size = this._scrollbar.size;\n\n    var maxOverscroll = this._getMaxOverscroll();\n\n    var _a = size.container,\n        width = _a.width,\n        height = _a.height;\n    var ctx = this._ctx;\n    ctx.save();\n\n    if (strength > 0) {\n      // glow on bottom side\n      // vertically flip\n      ctx.transform(1, 0, 0, -1, 0, height);\n    }\n\n    var opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n    var startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width; // controll point\n\n    var x = this._touchX || width / 2;\n    var y = Math.abs(strength);\n    ctx.globalAlpha = opacity;\n    ctx.beginPath();\n    ctx.moveTo(-startOffset, 0);\n    ctx.quadraticCurveTo(x, y, width + startOffset, 0);\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  };\n\n  return Glow;\n}();\n\nexport { Glow };","map":null,"metadata":{},"sourceType":"module"}